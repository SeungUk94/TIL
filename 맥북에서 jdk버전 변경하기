맥북 내 jdk버전을 변경하는 두가지 방법입니다.
변경하는 빈도가 많지않으므로, 잊었을때를 대비하여 작성합니다.
** 중요정보: jenv 사용하는편이 가장 좋습니다.

아래와같은 순서로 작성합니다.
- 일시적으로 변경하는 방법
- 영구적으로 변경하는 방법
- jenv 로 관리하는 방법

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
ㅡㅡㅡㅡㅡㅡ일시적으로 변경하는 방법ㅡㅡㅡㅡㅡㅡ 
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
1. 현재 설치된 JDK 버전 확인
   터미널을 열고 다음 명령어를 입력하여 현재 시스템에 설치된 JDK 버전을 확인합니다.
   > java -version

2. JDK 11 설치 경로 확인
   JDK 11을 설치한 경로를 확인합니다. 일반적으로 JDK는 `/Library/Java/JavaVirtualMachines/` 디렉토리에 설치됩니다.
    (본인은 /Library/Java/JavaVirtualMachines/jdk-11.jdk/Contents/Home 의 경로를 사용합니다)

3. 환경 변수 설정
   다음 명령어를 사용하여 `JAVA_HOME` 환경 변수를 설정합니다. 여기서 `/path/to/jdk-11`은 실제로 JDK 11이 설치된 디렉토리의 경로로 바꿔주어야 합니다.
   > export JAVA_HOME=/path/to/jdk-11
  (/Library/Java/JavaVirtualMachines/jdk-11.jdk/Contents/Home)
=> 잘 적용되었는지 확인합니다. 
   > echo $JAVA_HOME

4. 시스템 PATH에 추가
   JDK의 `bin` 디렉토리를 시스템 `PATH`에 추가합니다. 이렇게 하면 시스템이 `java`, `javac`, 그리고 기타 JDK 관련 명령어를 찾을 수 있습니다.
   > export PATH=$JAVA_HOME/bin:$PATH
=> 잘 적용되었는지 확인합니다.
   > echo $JAVA_HOME

5. 변경 사항 적용
   변경된 환경 변수를 적용합니다.
   > source ~/.bash_profile
   이 명령어는 현재 세션에만 적용되므로, 새로운 터미널 창을 열거나 시스템을 재부팅하면 다시 초기화됩니다.

6. 변경된 JDK 버전 확인
   다시 `java -version` 명령어를 사용하여 JDK 버전이 변경되었는지 확인합니다.

이제 JDK 11이 시스템에서 기본으로 사용되어야 합니다. 
이러한 변경은 터미널 세션에만 영향을 미치므로, 새로운 터미널 창을 열 때마다 반복해야 할 수 있으므로, 영구적으로 변경하려면 아래와 같은 순서로 실행합니다.


ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
ㅡㅡㅡㅡㅡㅡ영구적으로 변경하는 방법ㅡㅡㅡㅡㅡㅡ 
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
영구적으로 `JAVA_HOME` 환경 변수를 변경하려면 해당 설정을 세션 종료 후에도 유지되도록 프로파일 파일에 추가해야 합니다. 
macOS에서는 일반적으로 `~/.bash_profile` 파일을 사용합니다.

아래 명령어를 통하여 `~/.bash_profile` 파일에 `JAVA_HOME`을 설정하고 시스템 `PATH`에 추가할 수 있습니다. 
   > echo 'export JAVA_HOME=/path/to/jdk-11' >> ~/.bash_profile
   > echo 'export PATH=$JAVA_HOME/bin:$PATH' >> ~/.bash_profile

여기서 `/path/to/jdk-11`은 실제로 JDK 11이 설치된 디렉토리의 경로로 바꿔주어야 합니다. 
이렇게 하면 `~/.bash_profile` 파일에 두 줄이 추가되어 `JAVA_HOME`이 영구적으로 설정되고 시스템 `PATH`에 추가됩니다.

이후 변경된 설정을 적용하려면 다음 명령어를 실행합니다:
   > source ~/.bash_profile



ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
ㅡㅡㅡㅡㅡㅡjenv 를 활용하여 변경ㅡㅡㅡㅡㅡㅡ 
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
0. jenv 미설치시 설치
jenv 설치
   > brew install jenv

.zshrc에 추가
   > echo 'export PATH="$HOME/.jenv/bin:$PATH"' >> ~/.zshrc
   > echo 'eval "$(jenv init -)"' >> ~/.zshrc

.zshrc 실행(활성화)
source ~/.zshrc
ㅡㅡㅡㅡ

1. jenv에 사용할 버전 추가
   > jenv add /Library/Java/JavaVirtualMachines/jdk-11.jdk/Contents/Home/

2. jenv에 추가되어있는 리스트 확인
   > jenv versions
   ( 1.8 (set by /~~~~/jenv/version)  =>현재 버전이라는 뜻
     11.0
   ...)

3. 원하는 jdk로 버전 변경
   전역변경
   > jenv global 11.0
   로컬변경
   > jenv local 11.0

